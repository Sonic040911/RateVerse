<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.rateverse.mapper.ItemMapper">
    <!-- CRUD -->
    <insert id="insertItem">
        INSERT INTO item (topic_id, name, description, image_url,
                        average_rating, total_ratings, total_comments, created_at, updated_at )
        VALUES (#{topicId}, #{name}, #{description}, #{imageUrl},
                    #{averageRating}, #{totalRatings}, #{totalComments}, NOW(), NOW())
    </insert>

    <update id="updateItem">
        UPDATE item SET
            name = #{name},
            description = #{description},
            image_url = #{imageUrl},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteItemById">
        DELETE FROM item WHERE id = #{id}
    </delete>

    <delete id="deleteItemsByTopicId">
        DELETE FROM item WHERE topic_id = #{topicId}
    </delete>


    <!-- 查询 -->
    <select id="selectItemById" resultType="com.rateverse.bean.Item">
        select * from item where id = #{id}
    </select>

    <!-- 查询一堆评分项 (根据topic_id) -->
    <select id="selectItemsByTopicId" resultType="com.rateverse.bean.Item">
        select * from item where topic_id = #{topicId} order by created_at desc
    </select>


    <!-- 查询一堆评分项 (根据 topic_id 和 sortType 动态排序) -->
    <select id="selectItemsByTopicIdWithSort" resultType="com.rateverse.bean.Item">
        SELECT *
        FROM item
        WHERE topic_id = #{topicId}
        ORDER BY
        <choose>
            <when test="sortType == 'popular'">
                (total_ratings + total_comments) DESC, created_at DESC
            </when>
            <when test="sortType == 'up_to_date'">
                created_at DESC
            </when>
            <when test="sortType == 'high_score'">
                average_rating DESC, created_at DESC
            </when>
            <when test="sortType == 'low_score'">
                average_rating ASC, created_at DESC
            </when>
            <otherwise>
                created_at DESC
            </otherwise>
        </choose>
    </select>


    <!-- 根据ItemId获取它的TopicId -->
    <select id="getTopicIdByItemId" resultType="java.lang.Integer">
        select topic_id from item where id = #{itemId}
    </select>


    <!-- 更新评分统计信息 -->
    <update id="updateRatingStats">
        update item set
        average_rating = #{avg},
        total_ratings = #{count}
        where id = #{id}
    </update>

    <!-- 更新评论统计信息 -->
    <update id="updateCommentStats">
        update item set
        total_comments = #{count}
        where id = #{id}
    </update>

    <update id="countItemsByTopicId">
        SELECT COUNT(*) FROM item WHERE topic_id = #{topicId}
    </update>
</mapper>